# The MIT License (MIT)
#
# Copyright (c) 2016-2022 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+package org.eolang
+home https://github.com/objectionary/eo
+version 0.0.0
+alias org.eolang.hamcrest.assert-that
+junit

[] > matches-against-regular-expression
  assert-that > @
    /([a-z])+/.matches "dude"
    $.equal-to TRUE

[] > calculates-length-of-spaces-only
  assert-that > @
    " ".length
    $.equal-to 1

[] > joins-array
  assert-that > @
    "..".joined
      * "foo" "друг" "bar"
    $.equal-to "foo..друг..bar"

[] > trims-string
  assert-that > @
    "Hello, dude  ".trim
    $.equal-to "Hello, dude"

[] > turns-string-into-int
  assert-that > @
    "42".as-int
    $.equal-to 42

[] > turns-string-into-float
  assert-that > @
    "3.1415926".as-float
    $.equal-to 3.1415926

[] > turns-string-into-bytes
  assert-that > @
    "друг".as-bytes
    $.equal-to D0-B4-D1-80-D1-83-D0-B3

[] > bytes-equal-to-string
  assert-that > @
    D0-B4-D1-80-D1-83-D0-B3
    $.equal-to "друг"

[] > string-equals-to-bytes
  assert-that > @
    "друг"
    $.equal-to D0-B4-D1-80-D1-83-D0-B3

[] > reads-the-length
  assert-that > @
    "Hello, друг!".length
    $.equal-to 12

[] > compares-two-different-types
  assert-that > @
    "Hello"
    $.not
      $.equal-to 42

[] > text-block-one-line
  assert-that > @
    """
    Abc
    """
    $.equal-to "Abc"

[] > text-block-tree-lines
  assert-that > @
    """
    e
    e
    e
    """.as-bytes
    $.equal-to 65-0A-65-0A-65

[] > text-block-with-margin
  assert-that > @
    """
     z
      y
     x
    """.as-bytes
    $.equal-to 20-7A-0A-20-20-79-0A-20-78

[] > compares-two-different-strings
  assert-that > @
    "Hello"
    $.not
      $.equal-to "Good bye"

[] > supports-escape-sequences
  assert-that > @
    "Hello, \u0434\u0440\u0443\u0433!\n"
    $.equal-to "Hello, друг!\n"

[] > supports-escape-sequences-in-text
  assert-that > @
    """
    Hello, \u0434\u0440\u0443\u0433!\n
    """
    $.equal-to "Hello, друг!\n"

[] > preserves-indentation-in-text
  assert-that > @
    """
    a
     b
      c
    """
    $.equal-to "a\n b\n  c"

[] > similar-strings-generate-similar-hashes
  assert-that > @
    "hello world".as-hash
    $.equal-to
      "hello world".as-hash

[] > string-to-regex-unix-lines
  assert-that > @
    "/(.+)/d".as-regex
    .matches "A\\r\\nB\\rC\\nD"
    $.equal-to TRUE

[] > string-to-regex-case-insensitive
  assert-that > @
    "/(word)/i".as-regex
    .matches "WORD"
    $.equal-to TRUE

[] > string-to-regex-comments
  assert-that > @
    "/(\\d) #ignore this comment/x".as-regex
    .matches "4"
    $.equal-to TRUE

[] > string-to-regex-multiline
  assert-that > @
    "/(^([0-9]+).*)/m".as-regex
    .matches "2234 This is a sample text\\n1424 This second 2335 line\\n"
    $.equal-to TRUE

[] > string-to-regex-dotall
  assert-that > @
    "/(.*)/s".as-regex
    .matches "this is a sample \\nthis is second line"
    $.equal-to TRUE

[] > string-to-regex-unicode-case-and-insensitive
  assert-that > @
    "/(yildirim)/ui".as-regex
    .matches "Yıldırım"
    $.equal-to TRUE

[] > string-to-regex-div
  assert-that > @
    "/([0-9]+/\\d+)/".as-regex
    .matches "15/3"
    $.equal-to TRUE

[] > as-string-test
  "s" > s
  s.eq (s.as-string) > @
